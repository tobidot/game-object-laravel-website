# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: SFTP Deploy App
        # You may pin to the exact commit or the version.
        # uses: wlixcc/SFTP-Deploy-Action@28d6168ebf0707d5c118b3bbdfb831b56046127c
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          # username
          username: ${{ secrets.FTP_USER }}
          # your sftp server
          server:  ${{ secrets.FTP_SERVER }}
          # your sftp server port, default to 22
          port: 22 # default is 22
          # you can copy private_key from your *.pem file, keep format
          ssh_private_key: ${{ secrets.FTP_PRIVATE_KEY }}
          # will put all file under this path
          local_path: ./game-object/app/* # default is ./*
          # files will copy to under remote_path
          remote_path: ./app # default is /
          # sftp args
#           args: # optional

          
      - name: SFTP Deploy Public
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: ${{ secrets.FTP_USER }}
          server:  ${{ secrets.FTP_SERVER }}
          port: 22 # default is 22
          ssh_private_key: ${{ secrets.FTP_PRIVATE_KEY }}
          local_path: ./game-object/public/* # default is ./* 
          remote_path: /public # default is /  
      
      - name: SFTP Deploy Resources
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: ${{ secrets.FTP_USER }}
          server:  ${{ secrets.FTP_SERVER }}
          port: 22 # default is 22
          ssh_private_key: ${{ secrets.FTP_PRIVATE_KEY }}
          local_path: ./game-object/resources/* # default is ./*
          remote_path: /resources # default is /
      
      - name: SFTP Deploy Routes
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: ${{ secrets.FTP_USER }}
          server:  ${{ secrets.FTP_SERVER }}
          port: 22 # default is 22
          ssh_private_key: ${{ secrets.FTP_PRIVATE_KEY }}
          local_path: ./game-object/routes/* # default is ./*
          remote_path: /routes # default is /  
          
#       - name: FTP Deploy
#         # You may pin to the exact commit or the version.
#         # uses: SamKirkland/FTP-Deploy-Action@2a4e9b1312ebeb73a1f72b9330c71831c1e4ce01
#         uses: SamKirkland/FTP-Deploy-Action@4.0.0
#         with:
#           # ftp server
#           server: ${{ secrets.FTP_SERVER }}
#           # ftp username
#           username: ${{ secrets.FTP_USER }}
#           # ftp password
#           password: ${{ secrets.FTP_PASSWORD }}
#           # Server port to connect to (read your web hosts docs)
#           port: 22 # optional
#           # protocol to deploy with - ftp, ftps, or ftps-legacy
# #           protocol: # optional
#           # Folder to upload from, must end with trailing slash /
#           local-dir: ./game-object/
#           # Path to upload to on the server. Must end with trailing slash /
# #           server-dir: # optional
#           # Path and name of the state file - this file is used to track which files have been deployed
# #           state-name: # optional
#           # Prints which modifications will be made with current config options, but doesnt actually make any changes
# #           dry-run: # optional
#           # Deletes ALL contents of server-dir, even items in excluded with exclude argument
#           dangerous-clean-slate: true # optional
#           # An array of glob patterns, these files will not be included in the publish/delete process
# #           exclude: # optional
#           # How verbose should the information be - warn, info, debug
# #           log-level: # optional
#           # strict or loose
#           security: # optional
# 
